// Generated by view binder compiler. Do not edit!
package com.example.e_reader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_reader.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutTextCustomizationBottomsheetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView labelStyle;

  @NonNull
  public final TextView labelTheme;

  @NonNull
  public final LinearLayout layoutFontDefault;

  @NonNull
  public final LinearLayout layoutFontMono;

  @NonNull
  public final LinearLayout layoutFontSarif;

  @NonNull
  public final SeekBar seekBar;

  @NonNull
  public final TextView textLabelSize;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final TextView themeMode;

  private LayoutTextCustomizationBottomsheetBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView labelStyle, @NonNull TextView labelTheme,
      @NonNull LinearLayout layoutFontDefault, @NonNull LinearLayout layoutFontMono,
      @NonNull LinearLayout layoutFontSarif, @NonNull SeekBar seekBar,
      @NonNull TextView textLabelSize, @NonNull TextView textView12, @NonNull TextView textView13,
      @NonNull TextView themeMode) {
    this.rootView = rootView;
    this.labelStyle = labelStyle;
    this.labelTheme = labelTheme;
    this.layoutFontDefault = layoutFontDefault;
    this.layoutFontMono = layoutFontMono;
    this.layoutFontSarif = layoutFontSarif;
    this.seekBar = seekBar;
    this.textLabelSize = textLabelSize;
    this.textView12 = textView12;
    this.textView13 = textView13;
    this.themeMode = themeMode;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutTextCustomizationBottomsheetBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutTextCustomizationBottomsheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_text_customization_bottomsheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutTextCustomizationBottomsheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.label_style;
      TextView labelStyle = ViewBindings.findChildViewById(rootView, id);
      if (labelStyle == null) {
        break missingId;
      }

      id = R.id.label_theme;
      TextView labelTheme = ViewBindings.findChildViewById(rootView, id);
      if (labelTheme == null) {
        break missingId;
      }

      id = R.id.layout_font_default;
      LinearLayout layoutFontDefault = ViewBindings.findChildViewById(rootView, id);
      if (layoutFontDefault == null) {
        break missingId;
      }

      id = R.id.layout_font_mono;
      LinearLayout layoutFontMono = ViewBindings.findChildViewById(rootView, id);
      if (layoutFontMono == null) {
        break missingId;
      }

      id = R.id.layout_font_sarif;
      LinearLayout layoutFontSarif = ViewBindings.findChildViewById(rootView, id);
      if (layoutFontSarif == null) {
        break missingId;
      }

      id = R.id.seekBar;
      SeekBar seekBar = ViewBindings.findChildViewById(rootView, id);
      if (seekBar == null) {
        break missingId;
      }

      id = R.id.text_label_size;
      TextView textLabelSize = ViewBindings.findChildViewById(rootView, id);
      if (textLabelSize == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.theme_mode;
      TextView themeMode = ViewBindings.findChildViewById(rootView, id);
      if (themeMode == null) {
        break missingId;
      }

      return new LayoutTextCustomizationBottomsheetBinding((ConstraintLayout) rootView, labelStyle,
          labelTheme, layoutFontDefault, layoutFontMono, layoutFontSarif, seekBar, textLabelSize,
          textView12, textView13, themeMode);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
